name: Detective CI

on:
  push:
    branches: [ main, master ]
  pull_request:

env:
  RUN_ID: ${{ github.run_id }}
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  GET_SOURCES_ATTEMPTS: 10

jobs:
  # ===== Build =====
  build:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore dependencies
        run: |
          git config --system core.longpaths true
          cd src/Detective
          mkdir -p $NUGET_PACKAGES
          dotnet restore --packages $NUGET_PACKAGES

      - name: Build
        run: |
          cd src/Detective
          dotnet build Detective.sln -c Release -o ../../build_output
          dotnet build IntegrationTests/IntegrationTests.csproj -c Release -o ../../build_output

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build_output
          path: build_output

  # ===== Unit tests =====
  unit_tests:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build_output
          path: build_output

      - name: Run unit tests
        run: |
          cd src/Detective
#          dotnet test UnitTests/UnitTests.csproj --no-build -o ../../build_output

      - name: Upload allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-unit
          path: results/allure-results

  # ===== Integration tests =====
  integration_tests:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    needs: unit_tests
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1
          POSTGRES_DB: detective_test
        ports:
          - 5432:5432
        options: --pull always
        
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build_output
          path: build_output

      - name: Run integration tests
        run: |
          cd src/Detective
          dotnet test IntegrationTests/IntegrationTests.csproj -o ../../build_output

      - name: Upload allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-integration
          path: results/allure-results

  # ===== E2E tests =====
  e2e_tests:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    needs: integration_tests
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1
          POSTGRES_DB: detective_test
        ports:
          - 5432:5432
        options: --pull always
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build_output
          path: build_output

      - name: Run E2E tests
        run: |
          cd src/Detective
          dotnet test E2ETests/E2ETests.csproj -o ../../build_output

      - name: Upload allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-e2e
          path: results/allure-results

  # ===== Allure Report =====
  allure_report:
    runs-on: ubuntu-latest
    needs: [ unit_tests, integration_tests, e2e_tests ]
    container: frankescobar/allure-docker-service
    steps:
      - uses: actions/checkout@v4

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          path: allure-results

      - name: Generate Allure report
        run: |
          mkdir merged
          cp -r allure-results/* merged/ || true
          allure generate merged -o report --clean || true

      - name: Upload report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: report
